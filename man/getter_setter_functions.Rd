% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getNSetterFuns.R
\name{getter_setter_functions}
\alias{getter_setter_functions}
\alias{zScore,}
\alias{pVals,}
\alias{padjVals,}
\alias{rho,}
\alias{bestQ}
\alias{rho}
\alias{zScores}
\alias{pVals}
\alias{padjVals}
\alias{predictedMeans}
\alias{deltaPsiValue}
\title{Getter/Setter functions}
\usage{
rho(fds, type = currentType(fds))

zScores(fds, type = currentType(fds), byGroup = FALSE)

pVals(fds, type = currentType(fds), dist = "BetaBinomial",
  byGroup = FALSE)

padjVals(fds, type = currentType(fds), dist = c("BetaBinomial"),
  byGroup = FALSE)

predictedMeans(fds, type = currentType(fds))

deltaPsiValue(fds, type = currentType(fds))

bestQ(fds, type = currentType(fds))
}
\arguments{
\item{fds}{An FraseRDataSet object.}

\item{type}{The type of psi (psi5, psi3 or psiSite)}

\item{byGroup}{If TRUE, aggregation by donor/acceptor site will be done.}

\item{dist}{Distribution for which the p-values should be extracted.}
}
\value{
A (delayed) matrix or vector dependent on the type of data retrieved.
}
\description{
This is a collection of small accessor/setter functions for easy access to
the values within the FraseR model.
}
\section{Functions}{
\itemize{
\item \code{rho}: Returns the fitted rho values for the 
beta-binomial distribution

\item \code{zScores}: This returns the calculated z-scores.

\item \code{pVals}: This returns the calculated p-values.

\item \code{padjVals}: This returns the adjusted p-values.

\item \code{predictedMeans}: This returns the fitted mu (i.e. psi) 
values.

\item \code{deltaPsiValue}: Returns the difference between the 
observed and the fitted psi values.

\item \code{bestQ}: This returns the optimal size of the 
latent space according to the hyperparameter optimization or a simple 
estimate of about a tenth of the number of samples if the hyperparameter 
opimization was not run yet.
}}

\examples{
fds <- createTestFraseRDataSet()
currentType(fds) <- "psi5"

bestQ(fds)
rho(fds)
# get statistics
pVals(fds)
padjVals(fds)
zScores(fds)

}
