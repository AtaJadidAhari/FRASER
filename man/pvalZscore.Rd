% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pvalsNzscore.R
\name{pvalZscore}
\alias{pvalZscore}
\alias{calculateZscore}
\alias{calculatePvalues}
\alias{calculatePadjValues}
\title{Calculate P-values and Z-scores}
\usage{
calculateZscore(fds, type = currentType(fds), correction = "FraseR")

calculatePvalues(
  fds,
  type = currentType(fds),
  correction = "FraseR",
  BPPARAM = bpparam(),
  distributions = c("betabinomial"),
  capN = 5 * 1e+05
)

calculatePadjValues(fds, type = currentType(fds), method = "BY")
}
\arguments{
\item{fds}{A FraseRDataSet object}

\item{type}{The type of PSI (psi5, psi3 or psiSite for theta/splicing 
efficiency)}

\item{correction}{The method that should be used to correct for confounders.}

\item{BPPARAM}{the BiocParallel parameters for the parallelization}

\item{distributions}{The distribution based on which the p-values are 
calculated. Possible are beta-binomial, binomial and normal.}

\item{capN}{Counts are capped at this value to speed up the p-value 
calculation}

\item{method}{The p.adjust method that should be used.}
}
\value{
FraseRDataSet
}
\description{
The FraseR package provides functions to calculate nominal and 
and adjusted p-values as well as z-scores after fitting the beta-binomial 
parameters. See Detail and Functions for more information.
}
\details{
See Functions.
}
\section{Functions}{
\itemize{
\item \code{calculateZscore}: This function calculates z-scores based on the 
observed and expected logit 
psi.

\item \code{calculatePvalues}: This function calculates two-sided p-values based on 
the beta-binomial distribution (or binomial or normal if desired).

\item \code{calculatePadjValues}: This function adjusts the previously calculated 
p-values per donor/acceptor site for multiple testing.
}}

\examples{
  # preprocessing
  fds <- makeFittedExampleFraseRDataSet()
  
  # nomial p values
  fds <- calculatePvalues(fds, type="psi5")
  head(pVals(fds, type="psi5"))
  
  # donor site adjusted p values
  fds <- calculatePadjValues(fds, type="psi5", method="BY")
  head(padjVals(fds, type="psi5"))
  
  # z scores
  fds <- calculateZscore(fds, type="psi5")
  head(zScores(fds, type="psi5")) 

}
